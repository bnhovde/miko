import type { NextPage } from "next";

import Header from "components/Header";
import Screen from "components/Screen";
import Head from "next/head";
import Main from "components/Main";
import Footer from "components/Footer";
import { useEffect, useState } from "react";
import { getAll, remove, set } from "utils/localStorage";
import localStorageKeys from "constants/localStorageKeys";
import { LegacySprite, Sprite } from "types/sprite";
import { useRouter } from "next/router";
import SpriteGrid from "components/SpriteGrid";
import { encodeUrlSprite } from "utils/hash";

const Home: NextPage = () => {
  const router = useRouter();
  const [sprites, setSprites] = useState<Sprite[]>([]);

  useEffect(() => {
    const items = getAll(localStorageKeys.SPRITE);
    const sprites = items?.map((item) => JSON.parse(item)) as Sprite[];

    if (sprites) {
      setSprites(sprites);
    }
  }, []);

  const handleView = (spriteId: string) => {
    router.push(`/app/editor/sprite/${spriteId}`);
  };

  const handleShare = (spriteId: string) => {
    const spriteData = sprites.find((sprite) => sprite.id === spriteId);
    if (spriteData) {
      const { n, a, s, d, p, f } = encodeUrlSprite(spriteData);

      const params = `?n=${n}&a=${a}&s=${s}&d=${d}&p=${p}&f=${f}`;
      window.open(`/app/share${params}`, "_blank");
    }
  };

  const handleDelete = (spriteId: string) => {
    remove(`${localStorageKeys.SPRITE}-${spriteId}`);
    setSprites(sprites.filter((sprite) => sprite.id !== spriteId));
  };

  return (
    <Screen scrolling>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" type="image/x-icon" id="favicon" />
      </Head>

      <Header
        title="My Creations"
        action={{
          text: "Edit",
          url: "/app/my-creations?edit=true",
        }}
      />

      <Main centered padded>
        <SpriteGrid
          sprites={sprites}
          onView={handleView}
          onShare={handleShare}
          onDelete={handleDelete}
        />
      </Main>
      <Footer
        shortcuts={[
          {
            children: "L",
            label: "Login",
            hotKeys: "l",
            onToggle: () => router.push("/app/login"),
          },
          {
            children: "⏎",
            label: "Draw",
            hotKeys: "enter",
            onToggle: () => router.push("/app/editor/sprite"),
          },
        ]}
        action={{ text: "Draw!", url: "/app/editor/sprite" }}
      />
    </Screen>
  );
};

export default Home;
